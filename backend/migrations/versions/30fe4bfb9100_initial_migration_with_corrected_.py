"""Initial migration with corrected foreign key and SQLite compatibility

Revision ID: 30fe4bfb9100
Revises: 
Create Date: 2025-06-14 19:35:02.139576

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '30fe4bfb9100'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('market_data',
    sa.Column('id', sa.String(length=36), nullable=False),
    sa.Column('ticker', sa.String(length=10), nullable=False),
    sa.Column('data_type', sa.String(length=50), nullable=False),
    sa.Column('data_value', sa.JSON(), nullable=False),
    sa.Column('timestamp', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('newsletter_sources',
    sa.Column('id', sa.String(length=36), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('domain', sa.String(length=255), nullable=False),
    sa.Column('priority', sa.Integer(), nullable=True),
    sa.Column('credibility_score', sa.Numeric(precision=3, scale=2), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('users',
    sa.Column('id', sa.String(length=36), nullable=False),
    sa.Column('email', sa.String(length=255), nullable=False),
    sa.Column('password_hash', sa.String(length=255), nullable=False),
    sa.Column('first_name', sa.String(length=100), nullable=True),
    sa.Column('last_name', sa.String(length=100), nullable=True),
    sa.Column('preferences', sa.JSON(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email')
    )
    op.create_table('newsletters',
    sa.Column('id', sa.String(length=36), nullable=False),
    sa.Column('user_id', sa.String(length=36), nullable=True),
    sa.Column('title', sa.String(length=255), nullable=False),
    sa.Column('source', sa.String(length=100), nullable=False),
    sa.Column('publish_date', sa.DateTime(), nullable=False),
    sa.Column('content', sa.Text(), nullable=False),
    sa.Column('processed_content', sa.Text(), nullable=True),
    sa.Column('sentiment_score', sa.Float(), nullable=True),
    sa.Column('sentiment_confidence', sa.Float(), nullable=True),
    sa.Column('bullish_terms', sa.Text(), nullable=True),
    sa.Column('bearish_terms', sa.Text(), nullable=True),
    sa.Column('tickers', sa.Text(), nullable=True),
    sa.Column('key_phrases', sa.Text(), nullable=True),
    sa.Column('priority_score', sa.Float(), nullable=True),
    sa.Column('analysis_status', sa.String(length=50), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('portfolio_positions',
    sa.Column('id', sa.String(length=36), nullable=False),
    sa.Column('user_id', sa.String(length=36), nullable=False),
    sa.Column('ticker', sa.String(length=10), nullable=False),
    sa.Column('position_type', sa.String(length=20), nullable=True),
    sa.Column('quantity', sa.Numeric(precision=10, scale=2), nullable=True),
    sa.Column('avg_cost', sa.Numeric(precision=10, scale=4), nullable=True),
    sa.Column('current_price', sa.Numeric(precision=10, scale=4), nullable=True),
    sa.Column('market_value', sa.Numeric(precision=12, scale=2), nullable=True),
    sa.Column('unrealized_pnl', sa.Numeric(precision=12, scale=2), nullable=True),
    sa.Column('delta', sa.Numeric(precision=8, scale=4), nullable=True),
    sa.Column('gamma', sa.Numeric(precision=8, scale=4), nullable=True),
    sa.Column('theta', sa.Numeric(precision=8, scale=4), nullable=True),
    sa.Column('vega', sa.Numeric(precision=8, scale=4), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('user_alerts',
    sa.Column('id', sa.String(length=36), nullable=False),
    sa.Column('user_id', sa.String(length=36), nullable=False),
    sa.Column('alert_type', sa.String(length=50), nullable=False),
    sa.Column('ticker', sa.String(length=10), nullable=True),
    sa.Column('message', sa.Text(), nullable=False),
    sa.Column('is_read', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('ml_predictions',
    sa.Column('id', sa.String(length=36), nullable=False),
    sa.Column('user_id', sa.String(length=36), nullable=False),
    sa.Column('newsletter_id', sa.String(length=36), nullable=True),
    sa.Column('ticker', sa.String(length=10), nullable=False),
    sa.Column('prediction_timestamp', sa.DateTime(), nullable=True),
    sa.Column('probability_score', sa.Numeric(precision=5, scale=4), nullable=False),
    sa.Column('confidence_lower', sa.Numeric(precision=5, scale=4), nullable=True),
    sa.Column('confidence_upper', sa.Numeric(precision=5, scale=4), nullable=True),
    sa.Column('contributing_factors', sa.JSON(), nullable=True),
    sa.Column('model_version', sa.String(length=50), nullable=True),
    sa.ForeignKeyConstraint(['newsletter_id'], ['newsletters.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('trading_sessions',
    sa.Column('id', sa.String(length=36), nullable=False),
    sa.Column('user_id', sa.String(length=36), nullable=False),
    sa.Column('prediction_id', sa.String(length=36), nullable=True),
    sa.Column('ticker', sa.String(length=10), nullable=False),
    sa.Column('entry_price', sa.Numeric(precision=10, scale=4), nullable=True),
    sa.Column('exit_price', sa.Numeric(precision=10, scale=4), nullable=True),
    sa.Column('quantity', sa.Numeric(precision=10, scale=2), nullable=True),
    sa.Column('pnl', sa.Numeric(precision=12, scale=2), nullable=True),
    sa.Column('trade_success', sa.Boolean(), nullable=True),
    sa.Column('entry_timestamp', sa.DateTime(), nullable=True),
    sa.Column('exit_timestamp', sa.DateTime(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['prediction_id'], ['ml_predictions.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('trading_sessions')
    op.drop_table('ml_predictions')
    op.drop_table('user_alerts')
    op.drop_table('portfolio_positions')
    op.drop_table('newsletters')
    op.drop_table('users')
    op.drop_table('newsletter_sources')
    op.drop_table('market_data')
    # ### end Alembic commands ###
